./s2n_client_hello_recv_fuzz_test -timeout=5 -max_len=4096 -print_final_stats=1 -max_total_time=10 /tmp/tmp.cfpDf4rcJD  > fuzz-0.log 2>&1
./s2n_client_hello_recv_fuzz_test -timeout=5 -max_len=4096 -print_final_stats=1 -max_total_time=10 /tmp/tmp.cfpDf4rcJD  > fuzz-1.log 2>&1
./s2n_client_hello_recv_fuzz_test -timeout=5 -max_len=4096 -print_final_stats=1 -max_total_time=10 /tmp/tmp.cfpDf4rcJD  > fuzz-2.log 2>&1
./s2n_client_hello_recv_fuzz_test -timeout=5 -max_len=4096 -print_final_stats=1 -max_total_time=10 /tmp/tmp.cfpDf4rcJD  > fuzz-3.log 2>&1
================== Job 1 exited with exit code 256 ============
INFO: Seed: 347944338
INFO: Loaded 3 modules   (32363 guards): 31335 [0x7f1a168ab49c, 0x7f1a168c9e38), 953 [0x7f1a1589f9a0, 0x7f1a158a0884), 75 [0x723530, 0x72365c), 
INFO: 24 Clang Coverage Counters
Loading corpus dir: /tmp/tmp.cfpDf4rcJD
#0	READ units: 882
=================================================================
==17302==ERROR: AddressSanitizer: stack-use-after-scope on address 0x7ffe0f8fed00 at pc 0x0000004bfeb5 bp 0x7ffe0f8fea80 sp 0x7ffe0f8fea78
READ of size 4 at 0x7ffe0f8fed00 thread T0
    #0 0x4bfeb4 in client_hello_cb_ret /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:55:12
    #1 0x7f1a163d2906 in s2n_client_hello_recv /home/ubuntu/test2n/s2n/tls/s2n_client_hello.c:332:18
    #2 0x4c0ee3 in LLVMFuzzerTestOneInput /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:81:9
    #3 0x4cc322 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:495:13
    #4 0x4cbd8e in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:424:3
    #5 0x4cc146 in fuzzer::Fuzzer::ShuffleAndMinimize(std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >*) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:392:5
    #6 0x4c622a in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerDriver.cpp:749:6
    #7 0x4c1190 in main /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerMain.cpp:20:10
    #8 0x7f1a14b55b96 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
    #9 0x41e349 in _start (/home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test+0x41e349)

Address 0x7ffe0f8fed00 is located in stack of thread T0 at offset 32 in frame
    #0 0x4bfeff in LLVMFuzzerTestOneInput /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:59

  This frame has 2 object(s):
    [32, 36) 'randval' (line 71) <== Memory access at offset 32 is inside this variable
    [48, 49) 'tempval' (line 72)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-use-after-scope /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:55:12 in client_hello_cb_ret
Shadow bytes around the buggy address:
  0x100041f17d50: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x100041f17d60: f8 f8 f8 f8 f8 f2 f2 f2 f2 f2 f8 f2 f8 f2 f8 f2
  0x100041f17d70: f8 f2 f8 f2 f8 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100041f17d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041f17d90: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100041f17da0:[f8]f2 f8 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041f17db0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041f17dc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041f17dd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041f17de0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041f17df0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17302==ABORTING
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0x28,0x1f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x8b,
(\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x8b
artifact_prefix='./'; Test unit written to ./crash-df9adc67baaf01f6d01e995c63afb86ba0d1d1ea
Base64: KB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiw==
stat::number_of_executed_units: 22
stat::average_exec_per_sec:     0
stat::new_units_added:          0
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              57
================== Job 2 exited with exit code 256 ============
INFO: Seed: 347838666
INFO: Loaded 3 modules   (32363 guards): 31335 [0x7ff9b6c6349c, 0x7ff9b6c81e38), 953 [0x7ff9b5c579a0, 0x7ff9b5c58884), 75 [0x723530, 0x72365c), 
INFO: 24 Clang Coverage Counters
Loading corpus dir: /tmp/tmp.cfpDf4rcJD
#0	READ units: 882
=================================================================
==17304==ERROR: AddressSanitizer: stack-use-after-scope on address 0x7fffe1c3eac0 at pc 0x0000004bfeb5 bp 0x7fffe1c3e840 sp 0x7fffe1c3e838
READ of size 4 at 0x7fffe1c3eac0 thread T0
    #0 0x4bfeb4 in client_hello_cb_ret /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:55:12
    #1 0x7ff9b678a906 in s2n_client_hello_recv /home/ubuntu/test2n/s2n/tls/s2n_client_hello.c:332:18
    #2 0x4c0ee3 in LLVMFuzzerTestOneInput /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:81:9
    #3 0x4cc322 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:495:13
    #4 0x4cbd8e in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:424:3
    #5 0x4cc146 in fuzzer::Fuzzer::ShuffleAndMinimize(std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >*) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:392:5
    #6 0x4c622a in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerDriver.cpp:749:6
    #7 0x4c1190 in main /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerMain.cpp:20:10
    #8 0x7ff9b4f0db96 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
    #9 0x41e349 in _start (/home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test+0x41e349)

Address 0x7fffe1c3eac0 is located in stack of thread T0 at offset 32 in frame
    #0 0x4bfeff in LLVMFuzzerTestOneInput /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:59

  This frame has 2 object(s):
    [32, 36) 'randval' (line 71) <== Memory access at offset 32 is inside this variable
    [48, 49) 'tempval' (line 72)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-use-after-scope /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:55:12 in client_hello_cb_ret
Shadow bytes around the buggy address:
  0x10007c37fd00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c37fd10: 00 00 00 00 f1 f1 f1 f1 f8 f8 f8 f8 f8 f2 f2 f2
  0x10007c37fd20: f2 f2 f8 f2 f8 f2 f8 f2 f8 f2 f8 f2 f8 f3 f3 f3
  0x10007c37fd30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c37fd40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007c37fd50: 00 00 00 00 f1 f1 f1 f1[f8]f2 f8 f3 00 00 00 00
  0x10007c37fd60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c37fd70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c37fd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c37fd90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c37fda0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17304==ABORTING
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0x0,0x1f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x8b,
\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x8b
artifact_prefix='./'; Test unit written to ./crash-308892da42459a247fcae12bd2c3e38458fde450
Base64: AB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiw==
stat::number_of_executed_units: 22
stat::average_exec_per_sec:     0
stat::new_units_added:          0
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              57
================== Job 0 exited with exit code 256 ============
INFO: Seed: 347842637
INFO: Loaded 3 modules   (32363 guards): 31335 [0x7ffa2c8c949c, 0x7ffa2c8e7e38), 953 [0x7ffa2b8bd9a0, 0x7ffa2b8be884), 75 [0x723530, 0x72365c), 
INFO: 24 Clang Coverage Counters
Loading corpus dir: /tmp/tmp.cfpDf4rcJD
#0	READ units: 882
=================================================================
==17301==ERROR: AddressSanitizer: stack-use-after-scope on address 0x7ffcbc8e1ca0 at pc 0x0000004bfeb5 bp 0x7ffcbc8e1a20 sp 0x7ffcbc8e1a18
READ of size 4 at 0x7ffcbc8e1ca0 thread T0
    #0 0x4bfeb4 in client_hello_cb_ret /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:55:12
    #1 0x7ffa2c3f0906 in s2n_client_hello_recv /home/ubuntu/test2n/s2n/tls/s2n_client_hello.c:332:18
    #2 0x4c0ee3 in LLVMFuzzerTestOneInput /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:81:9
    #3 0x4cc322 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:495:13
    #4 0x4cbd8e in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:424:3
    #5 0x4cc146 in fuzzer::Fuzzer::ShuffleAndMinimize(std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >*) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:392:5
    #6 0x4c622a in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerDriver.cpp:749:6
    #7 0x4c1190 in main /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerMain.cpp:20:10
    #8 0x7ffa2ab73b96 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
    #9 0x41e349 in _start (/home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test+0x41e349)

Address 0x7ffcbc8e1ca0 is located in stack of thread T0 at offset 32 in frame
    #0 0x4bfeff in LLVMFuzzerTestOneInput /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:59

  This frame has 2 object(s):
    [32, 36) 'randval' (line 71) <== Memory access at offset 32 is inside this variable
    [48, 49) 'tempval' (line 72)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-use-after-scope /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:55:12 in client_hello_cb_ret
Shadow bytes around the buggy address:
  0x100017914340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100017914350: f1 f1 f1 f1 f8 f8 f8 f8 f8 f2 f2 f2 f2 f2 f8 f2
  0x100017914360: f8 f2 f8 f2 f8 f2 f8 f2 f8 f3 f3 f3 00 00 00 00
  0x100017914370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100017914380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100017914390: f1 f1 f1 f1[f8]f2 f8 f3 00 00 00 00 00 00 00 00
  0x1000179143a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000179143b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000179143c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000179143d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000179143e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17301==ABORTING
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0x28,0x1f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x8b,
(\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x8b
artifact_prefix='./'; Test unit written to ./crash-df9adc67baaf01f6d01e995c63afb86ba0d1d1ea
Base64: KB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiw==
stat::number_of_executed_units: 22
stat::average_exec_per_sec:     0
stat::new_units_added:          0
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              57
================== Job 3 exited with exit code 256 ============
INFO: Seed: 352473371
INFO: Loaded 3 modules   (32363 guards): 31335 [0x7f8acd5a849c, 0x7f8acd5c6e38), 953 [0x7f8acc59c9a0, 0x7f8acc59d884), 75 [0x723530, 0x72365c), 
INFO: 24 Clang Coverage Counters
Loading corpus dir: /tmp/tmp.cfpDf4rcJD
#0	READ units: 882
=================================================================
==17305==ERROR: AddressSanitizer: stack-use-after-scope on address 0x7ffd08e2b480 at pc 0x0000004bfeb5 bp 0x7ffd08e2b200 sp 0x7ffd08e2b1f8
READ of size 4 at 0x7ffd08e2b480 thread T0
    #0 0x4bfeb4 in client_hello_cb_ret /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:55:12
    #1 0x7f8acd0cf906 in s2n_client_hello_recv /home/ubuntu/test2n/s2n/tls/s2n_client_hello.c:332:18
    #2 0x4c0ee3 in LLVMFuzzerTestOneInput /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:81:9
    #3 0x4cc322 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:495:13
    #4 0x4cbd8e in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:424:3
    #5 0x4cc146 in fuzzer::Fuzzer::ShuffleAndMinimize(std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >*) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerLoop.cpp:392:5
    #6 0x4c622a in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerDriver.cpp:749:6
    #7 0x4c1190 in main /tmp/tmp.LFPRCqWDfu/Fuzzer/FuzzerMain.cpp:20:10
    #8 0x7f8acb852b96 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
    #9 0x41e349 in _start (/home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test+0x41e349)

Address 0x7ffd08e2b480 is located in stack of thread T0 at offset 32 in frame
    #0 0x4bfeff in LLVMFuzzerTestOneInput /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:59

  This frame has 2 object(s):
    [32, 36) 'randval' (line 71) <== Memory access at offset 32 is inside this variable
    [48, 49) 'tempval' (line 72)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-use-after-scope /home/ubuntu/test2n/s2n/tests/fuzz/s2n_client_hello_recv_fuzz_test.c:55:12 in client_hello_cb_ret
Shadow bytes around the buggy address:
  0x1000211bd640: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x1000211bd650: f8 f8 f8 f8 f8 f2 f2 f2 f2 f2 f8 f2 f8 f2 f8 f2
  0x1000211bd660: f8 f2 f8 f2 f8 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000211bd670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211bd680: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x1000211bd690:[f8]f2 f8 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211bd6a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211bd6b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211bd6c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211bd6d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211bd6e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17305==ABORTING
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0xff,0x2a,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfa,0xff,0xff,0xff,0xff,0xff,0xff,0x1,0x1d,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x1,0x0,0x0,0x0,0x0,0x0,
\xff*\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfa\xff\xff\xff\xff\xff\xff\x01\x1d\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x00\x00
artifact_prefix='./'; Test unit written to ./crash-8114824fed2723a5d3cbedc99e0359cfdc941ce1
Base64: /yr///////////////////r///////8BHf///////////wEAAAAAAA==
stat::number_of_executed_units: 22
stat::average_exec_per_sec:     0
stat::new_units_added:          0
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              57
