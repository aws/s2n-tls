////////////////////////////////////////////////////////////////
// Copyright 2016 Galois, Inc. All Rights Reserved
//
// Authors:
//      Aaron Tomb : atomb@galois.com
//	Nathan Collins : conathan@galois.com
//      Joey Dodds : jdodds@galois.com
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// A copy of the License is located at
//
//  http://aws.amazon.com/apache2.0
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.
//
////////////////////////////////////////////////////////////////

import "HMAC_properties.cry";
import "modthm.cry";

let hash_lemma1 =
  rewrite (cryptol_ss ()) (unfold_term ["hash_update_append"] {{ hash_update_append }});

let hash_lemma2 =
  rewrite (cryptol_ss ()) (unfold_term ["hash_update_empty"] {{ hash_update_empty }});

let mod_lemma = rewrite (cryptol_ss ()) (unfold_term ["modthm"] {{ modthm }});

time (prove_print (do {
    unfolding ["hmac_update_append"];
    unfolding ["hmac_update_c_state"];
    simplify(cryptol_ss ());
    simplify (addsimp' hash_lemma1 empty_ss);
    simplify (add_cryptol_eqs ["demote_add_distr"] empty_ss);
    simplify (addsimp' mod_lemma empty_ss);
    simplify (add_prelude_eqs ["eq_refl"] empty_ss);
    trivial;
}) {{ hmac_update_append }});

time (prove_print (do {
    unfolding ["hmac_update_empty"];
    unfolding ["hmac_update_c_state"];
    simplify(cryptol_ss ());
    simplify (addsimp' hash_lemma2 empty_ss);
    unint_z3 ["hash_update_c_state"];
}) {{ hmac_update_empty }});
