// utilities.saw Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0


///////////////////////////////////////////////////////////////////////////////
// Specifications

let r_bits_vector_weight_spec = do {
  (_, in_ptr) <- in_ref r_t "in";
  crucible_execute_func [in_ptr];
  acc <- crucible_fresh_var "acc" i64;
  crucible_return (tm acc);
};

let bit_scan_reverse_spec = do {
  val <- crucible_fresh_var "val" i64;
  crucible_execute_func [tm val];
  ret <- crucible_fresh_var "ret" i8;
  crucible_postcond {{ if val < 2^^32 then ret <= 32 else ret <= 64 }};
  crucible_return (tm ret);
};

// NOTE: Several inline assembly functions defined in utilities.h need to
//       have overrides defined for them, as we cannot verify them in
//       crucible.
let secure_cmp32_spec = do {
  v1 <- crucible_fresh_var "v1" i32;
  v2 <- crucible_fresh_var "v2" i32;
  crucible_execute_func [tm v1, tm v2];
  ret <- crucible_fresh_var "ret" i32;
  crucible_return (tm ret);
};

let secure_l32_mask_spec = do {
  v1 <- crucible_fresh_var "v1" i32;
  v2 <- crucible_fresh_var "v2" i32;
  crucible_execute_func [tm v1, tm v2];
  ret <- crucible_fresh_var "ret" i32;
  crucible_return (tm ret);
};


///////////////////////////////////////////////////////////////////////////////
// Proof commands

r_bits_vector_weight_ov <- verify r_bits_vector_weight_fun_name []
  r_bits_vector_weight_spec;

bit_scan_reverse_ov <- verify_pathsat "bit_scan_reverse" [] bit_scan_reverse_spec;

secure_cmp32_ov <- verify_asm "secure_cmp32" secure_cmp32_spec;

secure_l32_mask_ov <- verify_asm "secure_l32_mask" secure_l32_mask_spec;

