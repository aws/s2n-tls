version: 0.2

batch:
  build-matrix:
    static:
      ignore-failure: true
      env:
        type: LINUX_CONTAINER
        privileged-mode: true
    dynamic:
      env:
        image:
          - aws/codebuild/standard:4.0
        variables:
          INTEGV2_TEST:
            - test_client_authentication.py
            - test_dynamic_record_sizes.py
            - test_key_update.py
            - test_session_resumption.py
            - test_sni_match.py
            - test_well_known_endpoints.py
            - test_compatibility_with_oqs_openssl.py
            - test_fragmentation.py
            - test_hello_retry_requests.py
            - test_pq_handshake.py
            - test_signature_algorithms.py
            - test_version_negotiation.py
phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
      - echo Entered the install phase...
      - echo "We need a test PPA for gcc-9."
      - add-apt-repository ppa:ubuntu-toolchain-r/test -y
      - apt-get update -o Acquire::CompressionTypes::Order::=gz
      - apt-get update -y
      - |
        if expr "${GCC_VERSION}" : "9" >/dev/null; then
          apt-get install -y --no-install-recommends g++ g++-9 gcc gcc-9;
        fi
      - |
        if expr "${GCC_VERSION}" : "6" >/dev/null; then
          apt-get install -y --no-install-recommends g++ g++-6 gcc gcc-6;
        fi

      # Don't install old clang and llvm if LATEST_CLANG is enabled, handle it in install_clang.sh instead
      - |
        if expr "${LATEST_CLANG}" != "true" >/dev/null; then
          apt-get install -y --no-install-recommends clang-3.9 llvm-3.9;
        fi
      - apt-get install -y --no-install-recommends indent iproute2 kwstyle lcov libssl-dev m4 make net-tools nettle-bin nettle-dev pkg-config psmisc python3-pip shellcheck sudo tcpdump unzip valgrind zlib1g-dev zlibc cmake tox libtool ninja-build
  pre_build:
    commands:
      - |
        if [ -d "third-party-src" ]; then
          cd third-party-src;
        fi
      - $CB_BIN_DIR/install_default_dependencies.sh
      - TESTS=asan $CB_BIN_DIR/s2n_codebuild.sh
  build:
    commands:
      - printenv
      - cd tests/integrationv2
      - make $INTEGV2_TEST
